// <auto-generated />
using System;
using HappyHour.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HappyHour.Migrations
{
    [DbContext(typeof(AvDbContext))]
    [Migration("20210101060714_AvDb")]
    partial class AvDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("AvActorAvItem", b =>
                {
                    b.Property<int>("ActorsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ActorsId", "ItemsId");

                    b.HasIndex("ItemsId");

                    b.ToTable("AvActorAvItem");
                });

            modelBuilder.Entity("AvGenreAvItem", b =>
                {
                    b.Property<int>("GenresId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GenresId", "ItemsId");

                    b.HasIndex("ItemsId");

                    b.ToTable("AvGenreAvItem");
                });

            modelBuilder.Entity("HappyHour.Model.AvActor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<string>("PicturePath")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("HappyHour.Model.AvActorName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ActorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActorId");

                    b.ToTable("ActorNames");
                });

            modelBuilder.Entity("HappyHour.Model.AvGenre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("HappyHour.Model.AvItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateModifed")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateReleased")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCensored")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LeakedPid")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrigTitle")
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pid")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Plot")
                        .HasMaxLength(2048)
                        .HasColumnType("TEXT");

                    b.Property<float>("Rating")
                        .HasColumnType("REAL");

                    b.Property<int?>("SeriesId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StudioId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SeriesId");

                    b.HasIndex("StudioId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("HappyHour.Model.AvSeries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("HappyHour.Model.AvStudio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Studios");
                });

            modelBuilder.Entity("AvActorAvItem", b =>
                {
                    b.HasOne("HappyHour.Model.AvActor", null)
                        .WithMany()
                        .HasForeignKey("ActorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HappyHour.Model.AvItem", null)
                        .WithMany()
                        .HasForeignKey("ItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AvGenreAvItem", b =>
                {
                    b.HasOne("HappyHour.Model.AvGenre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HappyHour.Model.AvItem", null)
                        .WithMany()
                        .HasForeignKey("ItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HappyHour.Model.AvActorName", b =>
                {
                    b.HasOne("HappyHour.Model.AvActor", "Actor")
                        .WithMany("Names")
                        .HasForeignKey("ActorId");

                    b.Navigation("Actor");
                });

            modelBuilder.Entity("HappyHour.Model.AvItem", b =>
                {
                    b.HasOne("HappyHour.Model.AvSeries", "Series")
                        .WithMany()
                        .HasForeignKey("SeriesId");

                    b.HasOne("HappyHour.Model.AvStudio", "Studio")
                        .WithMany()
                        .HasForeignKey("StudioId");

                    b.Navigation("Series");

                    b.Navigation("Studio");
                });

            modelBuilder.Entity("HappyHour.Model.AvActor", b =>
                {
                    b.Navigation("Names");
                });
#pragma warning restore 612, 618
        }
    }
}
